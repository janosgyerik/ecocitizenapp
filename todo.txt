release notes
=============
-


experiment essential
====================
! bug: upload of binary data cannot work without encoding the binary data
! bug: pass byte[] instead of string, and convert to int with (int)(bytes[i]&0xff)
! bug: add back find gps, important for experiment
! bug: when zephyr reader not online it gets in bad state on second connection attempt
minor: rename DeviceReader to DeviceDriver


experiment good to have
=======================
- after delete file return to list
- use binary reader by default
    - designate a new bundle type for binary data
- hexa mode should signal to the service to use a binary reader
- show connected sensors, somewhere...
- release in marketpace
- autoconnect
    - new activity to configure some paired devices for autoconnect
    - new button to connect to autoconnect devices


release in marketplace
======================
- create branch for new API version
- install on motorola
- create Android marketplace page
- release on marketplace
- announce the release
	- project blog
	- twitter
	- launchpad


current focus
=============
R make the tree not squeezed
x file uploader: progress indicator with percentage
R? about page in the app
R create "red" style for buttons
R+ user registration activity
	- requires HttpUtil
	- username
	- password
	- get api key - HttpUtil
	- started from settings activity
		- also anon mode option
	- upload app reminds
		- if not logged in
		- if in anon mode
V design new dedicated screen for zephyr health sensors
- do not duplicate the button definitions in the main activities but make them share code somehow
- make the title show the last connected sensor
	- if possible to manipulate the title in a tabbed app....
! add support for the other Zephyr device
- combine FileUploader, SensorMapUploaderService, Util in a single HttpUtil
- bulk upload: an entire file as attachment
- add a zephyr logfile for testing/debugging purposes
- review comments in entire code, especially service code
- improve data uploading throughput
	test slowness, confirm and quantify
	pack multiple messages in one transmission
	repeat test, confirm improvement
- performance issues? consider the Dev Guide: 'Designing for Performance'


bugs
====
! bug: app gets into strange state after connection lost, sending session id 'null'
- bug: wrong pin is quietly ignored when pairing. NOT good!
- bug: filemanager.sh is not friendly
	- should show help when no args were entered
	- should show error if permission is denied (no sdcard)
	- what happens when usb debugging not enabled?
- bug: it seems two GpsLocationListeners are created, why?
- bug: why is this:
    D/DeviceManagerClient( 2764): handleMessage 13 CO2Sample2.txt
    D/DeviceManagerClient( 2764): handleMessage 15 null
    D/DeviceManagerClient( 2764): handleMessage 13 CO2Sample2.txt
    D/DeviceManagerClient( 2764): handleMessage 15 null
- bug: after entering comment, the keyboard lingers too long and the tree in the tree view looks squeezed and ugly


documentation
=============
- document adding drivers for new sensors: SensorDataParser
- update class diagram for .service
- add class diagram for .app
- add class diagrams to wiki with additional explanatory text


optimization
============
- clean up variable visibility in .app


later
=====
- show data on local map


obscure bugs
============
? bug: android uploader gets killed
? bug: java.net.UnknownHostException


nice to have
============
- consider using ViewStubs
- try to rewrite nested linearlayouts with relativelayout


possibly bluetooth backport bugs
================================
	cannot detect connection failure to paired device, when the paired device is off (and also when out of range?)
	when calling mmInStream.close(), keyDispatchingTimedOut happens, dumping CPU usage and other debug infos and eventually kill the application itself


