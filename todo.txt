release notes
=============
- easier navigation: connect / disconnect buttons on screen instead of menu


when connected
==============
- upgrade an android to newer version


release in marketplace
======================
- complete support for zephyr
- follow through the steps in android docs


current focus
=============
- device list should show bt devices on scan, even if already paired
- rename all 'sentence' related things to 'SensorData', where applicable
	- rename sendSentenceLineMsg to sendSensorDataMsg
	- rename getSentenceLine to getSensorData
	- rename SentenceBundleWrapper to SensorDataBundleWrapper
	- grep -ri sentence .
- plan the plugin framework for adding support for new devices
	- plugin developers should not have to touch existing code, instead simply add new driver classes
	- to add support for a new device =>
		- implement DeviceReader
		- implement SensorDataParser
	- maybe add SENSOR_TYPE to SensorDataBundle, use it to construct the right parser
- zephyr
	- implement plugin, show heartrate on TabularView+
	- add a logfile to make it possible to test
	- design new dedicated screen for zephyr -> Vika
- adjust font size of CO2 on TreeView
- DeviceListActivity improvement
	- show logfile devices only in 'Debug mode'
- clean up style
- bug: it seems two GpsLocationListeners are created, why?
- bug: why is this:
    D/DeviceManagerClient( 2764): handleMessage 13 CO2Sample2.txt
    D/DeviceManagerClient( 2764): handleMessage 15 null
    D/DeviceManagerClient( 2764): handleMessage 13 CO2Sample2.txt
    D/DeviceManagerClient( 2764): handleMessage 15 null
- clean up variable visibility in .app
- add class diagram for .app
- update class diagram for .service
- add class diagrams to wiki with additional explanatory text
- bug: after entering comment, the keyboard lingers too long and the tree in the tree view looks squeezed and ugly


critical for next experiment
============================
- bug: app gets into strange state after connection lost, sending session id 'null'
- improve data uploading throughput
	test slowness, confirm and quantify
	pack multiple messages in one transmission
	repeat test, confirm improvement
	automatically adjust sending buffer size
	! an alternative solution is to use an alternative high speed uploader class


optimization
============
- make it possible to cancel upload in FileInfoWithUploadActivity
	tip: the activity is launched from FileUploaderActivity
	tip: make ProgressDialog cancelable
- add progress bar while uploading a file in FileInfoWithUploadActivity
	tip: AsyncTask.onProgressUpdate
	since we know number of lines, this should be possible
- create the foundation for detecting sensor types and using different drivers based on sensor type
	use ascii reader with senspods
	use binary reader (zephyr reader) with zephyr
	apply unit type overrides (ppm instead of V for COx from senspods)
- clean up files on android
	check on sessions that crash the app
	remove workaround code
- fix hardcoded values in debugtools
? bug: android uploader gets killed
? bug: java.net.UnknownHostException
- AddNote activity: override onSaveInstanceState method to prevent losing text when another application (like a phone call) comes to the foreground
- if and only if performance is crucial, follow the 'Designing for Performance' article in Dev Guide
- try to rewrite nested linearlayouts with relativelayout
- consider using ViewStubs
- review comments in entire code, especially service code


file uploader "nice" implementation
===================================
+ show file info card with buttons
+ Upload btn begins upload in async mode
- Cancel btn can interrupt the upload
- progress bar is updated regularly
- Close button cancels upload
+ show success/failure on completion
+ show/hide buttons on success/failure appropriately


nice to have
============
- tweet current location and measurements
- know the number of data records pending for upload
- user profiles: anon, dev, janos, ...
- FileSaverService with proper synchronization


possibly bluetooth backport bugs
================================
	cannot detect connection failure to paired device, when the paired device is off (and also when out of range?)
	when calling mmInStream.close(), keyDispatchingTimedOut happens, dumping CPU usage and other debug infos and eventually kill the application itself


