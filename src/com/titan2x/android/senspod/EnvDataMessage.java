package com.titan2x.android.senspod;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.StreamCorruptedException;

import com.titan2x.envdata.sentences.CO2Sentence;
import com.titan2x.envdata.sentences.GPRMCSentence;
import com.titan2x.envdata.sentences.Sentence;

/**
 * A class to encapsulate all kinds of environmental data,
 * able to serialize/deserialize itself from/to a byte array.
 * 
 * @author janosgyerik
 *
 */
public class EnvDataMessage {
	/**
	 * A raw sentence object that can be useful for debugging.
	 */
	public Sentence sentence = null;
	
	public GPRMCSentence gprmc = null;
	public CO2Sentence co2 = null;
	
	private boolean hasUsableFields = true;
	
	/**
	 * This method is only meaningful after constructing an EnvDataMessage
	 * from a byte array. Otherwise it is completely meaningless.
	 * 
	 * @return
	 */
	public boolean hasUsableFields() {
		return hasUsableFields;
	}
	
	/**
	 * Create an empty EnvDataMessage. 
	 * Populate its fields later, such as CO2, GPRMC, etc.
	 * 
	 * When the message is ready to send, use the toByteArray() to
	 * generate a byte array for sending.
	 */
	public EnvDataMessage() {
	}

	/**
	 * Reconstruct EnvDataMessage from using ObjectInputStream,
	 * from a byte array generated by toByteArray() at the sender.
	 *
	 * All errors will be absorbed, in the worst case the object 
	 * will be empty with no usable fields.
	 * 
	 * Use the hasUsableFields() to check if the new object has anything useful.
	 *
	 * @param bytes
	 */
	public EnvDataMessage(byte[] bytes) {
		ByteArrayInputStream bais = new ByteArrayInputStream(bytes);
		try {
			ObjectInputStream ois = new ObjectInputStream(bais);
			sentence = (Sentence)ois.readObject();
			gprmc = (GPRMCSentence)ois.readObject();
			hasUsableFields = true;
			co2 = (CO2Sentence)ois.readObject();
		} catch (StreamCorruptedException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/**
	 * Serialize EnvDataMessage into a byte array using ObjectOutputStream.
	 * 
	 * @return Serialized EnvDataMessage as byte[], or null on error.
	 */
	public byte[] toByteArray() {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		try {
			ObjectOutputStream oos = new ObjectOutputStream(baos);
			oos.writeObject(sentence);
			oos.writeObject(gprmc);
			oos.writeObject(co2);
		} catch (IOException e) {
			e.printStackTrace();
			return null;
		}
		return baos.toByteArray();
	}

}
